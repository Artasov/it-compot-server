# A unit of servers (upstream) is created, called web.
# This unit contains 1 web server on port 8000.
# This means that Nginx will contact the web server on port 8000 to process requests.
upstream web {
    server web:8000;
}
# Configuration block for a virtual server in Nginx.
# In this case, it describes how to handle requests on port 80 (the standard HTTP port).
server {
    # This tells Nginx to listen for incoming connections on port 80.
    listen 443 ssl;
    server_name itschool.app;

    ssl_certificate /etc/nginx/ssl/ssl.crt;
    ssl_certificate_key /etc/nginx/ssl/ssl.key;
    # add_header Access-Control-Allow-Origin *;
    # Describes how to handle requests that come to the root path (/) of your domain.
    location / {
        # Set the maximum upload file size
        # Nginx redirects all requests to http://web,
        # which corresponds to the server unit created earlier.
        proxy_pass http://web;
        # Adds an X-Forwarded-For header to the request.
        # This header contains the IP address of the original client,
        # which made the request even if the request was proxyed through other servers.
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # The Host header is set, which contains the domain name
        # specified in the request. This is important so that the Django server can process the request correctly.
        proxy_set_header Host $host;
        # Disables automatic header modification in responses from the proxy server.
        proxy_redirect off;
    }

    # Proxy redirection for static files
    location /static/ {
        proxy_pass https://minio:9000/static/;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    # Proxy redirection for media files
    location /media/ {
        proxy_pass https://minio:9000/media/;
        proxy_set_header Host $host;
        proxy_redirect off;
    }
}
server {
    listen 80;
    server_name itschool.app;
    return 301 https://$host$request_uri;
}